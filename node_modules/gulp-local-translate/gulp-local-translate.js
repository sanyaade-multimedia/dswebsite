/////////////////////////////////////////////
//
// gulp-local-translate.js
//
// Generate html web pages locally in Windows
// so we can test insertion of tags using
// json dictionary translation file
//
/////////////////////////////////////////////

var fs = require('fs');
var gutil = require('gulp-util');
var PluginError = gutil.PluginError;
var through = require('through2');
var path = require('path');
var moment = require('moment');
var now = moment();
var totalFilesProcessed = 0;
var ONE_HOUR = 3600000;

const PLUGIN_NAME = 'gulp-local-translate.js';

module.exports = function (maxFiles) {
    return through.obj(function (file, encoding, next) {

        var ext = path.extname(file.history[0]);
        var srcDir = path.dirname(file.history[0]);
        var rootFile = path.basename(file.history[0], '.html');
        var jsonFile = (path.join(srcDir, rootFile)) + '.json';

        if (!fs.existsSync(jsonFile)) {
            next();
            return;
        }

        if (ext != '.html') {
            next();
            return;
        }

        if (!fs.existsSync(jsonFile)) {
            next();
            return;
        }


        if ((now - file.stat.mtime) > ONE_HOUR) {
            next();
            return;
        }

        totalFilesProcessed++;

        if (totalFilesProcessed > maxFiles) {
            next();
            return;
        }

        processFile(file, jsonFile, encoding, next);
    });
};


function processFile(file, jsonFile, encoding, next) {
    console.log('translating ' + file.history[0]);
    var fileData = file.contents.toString(encoding);
    var data = fs.readFile(jsonFile, 'utf8', function (err, data) {
        data = data.replace(/\r/g,'');
        data = data.replace(/\n/g,'');
        data = data.replace(/\t/g,'');
        data = JSON.parse(data);

        for (var index in data) {
            var stringText = data[index];
            var exp = ":" + index + ":";
            // console.log('   > ' + exp + ' ' + stringText);
            var rePattern = new RegExp(exp, 'ig');
            fileData = fileData.replace(rePattern,stringText)
        }
        file.contents = new Buffer(fileData);
        next(null, file);
    });
}
